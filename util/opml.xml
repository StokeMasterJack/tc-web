<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
    <head>
        <title>Kotlin</title>
        <dateModified>Thu, 15 Jun 2017 18:26:52 +0000</dateModified>
        <ownerName>StokeMasterJack</ownerName>
    </head>
    <body>
        <outline text="Meta">
            <outline text="Thinking in Kotlin" tags="title"/>
            <outline text="5" tags="days"/>
        </outline>
        <outline text="Intro">
            <outline type="note" isComment="true" text="This 5-day hands-on workshop will teach you everything you need to build powerful, real-world applications in Kotlin. This is an in-depth coverage of the Kotlin programming language, the Kotlin API and surrounding technologies. You'll learn how to build apps that target the JVM, browser, Android and native platforms." user="StokeMasterJack" _user_id="116153"/>
            <outline text="Workshop Format">
                <outline type="note" isComment="true" text="In this workshop we build a non-trivial project over the course of the week. Much of this work is in the form of &quot;do on your own&quot; exercises. Through this technique, we cover the depth and breadth of Kotlin and related topics as they naturally arise in the context of building applications." user="StokeMasterJack" _user_id="116153"/>
                <outline type="note" isComment="true" text="By the end of this workshop you will have built a modestly complex, full-stack Kotlin application with a Kotlin JVM back-end and two Kotlin front-ends, browser and Android." user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Class Size">
                <outline type="note" isComment="true" text="Our public workshops have a maximum student count of 4. So each student is ensured an individualized training experience. We encourage you to bring in your projects and any special topics you'd like to cover. " user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Prerequisites">
                <outline type="note" isComment="true" text="A basic, but not advanced, knowledge of a Java-ish language (Java, JavaScript, etc.) " user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Price">
                <outline type="note" isComment="true" text="$3,200" user="StokeMasterJack" _user_id="116153"/>
            </outline>
        </outline>
        <outline text="Topics">
            <outline text="Kotlin Overview">
                <outline type="note" isComment="true" text="What are the defining features of Kotlin. Where does Kotlin fit into the broader landscape. What makes Kotlin special and why might Kotlin become the next big language." user="StokeMasterJack" _user_id="116153"/>
                <outline text="OO, Functional, Practical"/>
                <outline text="Target platforms"/>
                <outline text="Statically typed"/>
                <outline text="Concision"/>
                <outline text="Type inference"/>
                <outline text="Interop"/>
                <outline text="Backing"/>
                <outline text="IDE"/>
                <outline text="Modern languages features"/>
                <outline text="Kotlin compared to related technologies"/>
            </outline>
            <outline text="Core Language Features">
                <outline type="note" isComment="true" text="He we master the nuts and bolts of the language. Types, ranges, functions, null-handling, control structures, string handling, error handling, etc." user="StokeMasterJack" _user_id="116153"/>
                <outline text="Variables and constants">
                    <outline text="Declaring variables"/>
                    <outline text="val vs var"/>
                    <outline text="const val vs val"/>
                    <outline text="Initialization"/>
                    <outline text="Local vs top-level declarations"/>
                    <outline text="Adding type annotations"/>
                    <outline text="Type inference"/>
                </outline>
                <outline text="Basic types">
                    <outline text="Numbers and Booleans"/>
                    <outline text="Chars and Strings"/>
                    <outline text="Arrays and Lists"/>
                    <outline text="Sets and Maps"/>
                    <outline text="Simple objects (LocalDate, Color)"/>
                    <outline text="Literals + type inference"/>
                    <outline text="With type annotations"/>
                </outline>
                <outline text="Null handling">
                    <outline text="Nullable and non-nullable types"/>
                    <outline text="Safe calls with ?."/>
                    <outline text="The Elvis operator"/>
                    <outline text="The !! operator"/>
                    <outline text="Safe casts"/>
                    <outline text="Collections"/>
                </outline>
                <outline text="Strings">
                    <outline text="String templates"/>
                    <outline text="Multiline Strings"/>
                    <outline text="Language injection"/>
                    <outline text="Margin prefix and trim margin"/>
                </outline>
                <outline text="Package and import">
                    <outline text="Creating packages"/>
                    <outline text="Accessing members of other packages"/>
                    <outline text="Fully Qualified"/>
                    <outline text="Import exact"/>
                    <outline text="Import with wildcard"/>
                    <outline text="Import with alias (as)"/>
                    <outline text="Public by default"/>
                    <outline text="File-private variables"/>
                    <outline text="Default imports"/>
                    <outline text="Things that can be imported"/>
                </outline>
                <outline text="Function basics">
                    <outline text="Top-level functions"/>
                    <outline text="Member function"/>
                    <outline text="Local functions"/>
                    <outline text="Type annotations"/>
                    <outline text="Unit functions"/>
                    <outline text="Single expression functions"/>
                    <outline text="Explicit return types"/>
                    <outline text="Named arguments"/>
                    <outline text="Default arguments"/>
                    <outline text="Varargs"/>
                    <outline text="Spread operator"/>
                </outline>
                <outline text="Lambdas and anonymous functions">
                    <outline text="Higher-order functions"/>
                    <outline text="Using higher-order functions"/>
                    <outline text="Implicit it"/>
                    <outline text="Inferred return type"/>
                    <outline text="Destructuring"/>
                    <outline text="Declaring higher-order functions"/>
                    <outline text="Function type annotations"/>
                    <outline text="Inline"/>
                    <outline text="qualified return syntax"/>
                </outline>
                <outline text="Advanced functions">
                    <outline text="Function references (::f1)"/>
                    <outline text="Tail recursive functions"/>
                    <outline text="Inline functions"/>
                    <outline text="Extension functions"/>
                    <outline text="Infix notation"/>
                    <outline text="Generic Functions"/>
                    <outline text="Anonymous Functions (fun keyword)"/>
                    <outline text="Closures"/>
                    <outline text="Function Literals with Receiver"/>
                </outline>
                <outline text="Generics"/>
            </outline>
            <outline text="Object-Oriented Kotlin">
                <outline type="note" isComment="true" text="How to use and create classes. Properties. Constructors. Delegation and Inheritance. Extension methods. And more." user="StokeMasterJack" _user_id="116153"/>
                <outline text="Class members">
                    <outline text="Properties"/>
                    <outline text="Methods"/>
                </outline>
                <outline text="Using Objects and Classes">
                    <outline text="Destructuring">
                        <outline text="Basic destructuring"/>
                        <outline text="Destructuring in a for loop"/>
                        <outline text="Returning two values from a function"/>
                        <outline text="Destructuring maps"/>
                        <outline text="Underscores"/>
                        <outline text="Destructuring in Lambdas"/>
                    </outline>
                </outline>
                <outline text="Creating Classes">
                    <outline text="Constructors and initialization"/>
                    <outline text="Methods"/>
                    <outline text="Properties"/>
                    <outline text="Delegation"/>
                    <outline text="Inheritance"/>
                </outline>
                <outline text="Other">
                    <outline text="Defining classes"/>
                    <outline text="Members"/>
                    <outline text="Fields and Properties"/>
                    <outline text="Fields declared on their own line"/>
                    <outline text="Fields declared as constructor arg"/>
                    <outline text="init blocks"/>
                    <outline text="Primary constructor"/>
                    <outline text="Constructor args with and without val/var"/>
                    <outline text="Constructor annotations and visibility modifiers"/>
                    <outline text="Secondary constructor"/>
                    <outline text="Calling the primary constructor from secondary constructor"/>
                    <outline text="Methods"/>
                    <outline text="Constructors"/>
                    <outline text="Creating class"/>
                    <outline text="Extension functions"/>
                    <outline text="Inheritance"/>
                </outline>
            </outline>
            <outline text="Functional Kotlin">
                <outline type="note" isComment="true" text="Kotlin is a powerful functional programming language. 80% of &quot;Thinking in Kotlin&quot; is &quot;Thinking Functional&quot;. Functional concepts can be a big paradigm shift. We introduce these concepts here and continue to reinforce them throughout the workshop." user="StokeMasterJack" _user_id="116153"/>
                <outline text="Higher order functions"/>
                <outline text="Map/Filter/Reduce/Sort/Sum"/>
                <outline text="Other collection functions"/>
                <outline text="Transforms versus mutations"/>
                <outline text="Function programming with complex data structures"/>
                <outline text="Converting an OO app to functional"/>
            </outline>
            <outline text="Kotlin Standard Library">
                <outline type="note" isComment="true" text="The key to being productive with Kotlin is knowing the standard library. As a bonus, mastering this library and it's idioms will surely make you a better programmer." user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Platform-Specific Kotlin">
                <outline type="note" isComment="true" text="Her we learn how to build and deploy apps for all 4 of Kotlin's target platforms: JVM, Android, Browser and Native. We also learn how to create multi-platform modules." user="StokeMasterJack" _user_id="116153"/>
                <outline text="Kotlin on the JVM"/>
                <outline text="Kotlin on Android"/>
                <outline text="Kotlin in the Browser"/>
                <outline text="Native Kotlin"/>
                <outline text="Multi-platform modules"/>
            </outline>
            <outline text="Building Kotlin Apps">
                <outline type="note" isComment="true" text="Here you will learn how to build and automate your Kotlin projects using the most popular build tools from the Kotlin ecosystem: gradle, maven, webpack." user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Thinking in Kotlin">
                <outline type="note" isComment="true" text="This is about *idiomatic Kotlin*, i.e. doing things the Kotlin way. Here and throughout the workshop, we'll encourage idioms and practices that take best possible advantage of Kotlin's strengths." user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Mastering Kotlin in the IDE">
                <outline type="note" isComment="true" text="One of Kotlin's major selling points is the IDE support. Kotlin is designed by an IDE company. The Kotlin language + the JetBrains IDE is a super productive combination. But we often find developers use only a fraction of the IDE's power. Learning the ins and outs of the IDE will be one of the most valuable things you'll learn in this workshop. " user="StokeMasterJack" _user_id="116153"/>
                <outline text="Language Injection"/>
                <outline text="Refactoring"/>
            </outline>
            <outline text="Legacy Migration, Integration and Interop">
                <outline type="note" isComment="true" text="Kotlin is not crippled by the newness of the Kotlin ecosystem. This is because Kotlin takes maximum advantage of the platform via first-class interop and integration, be it Java, JavaScript or native. Here will learn how to migrate legacy apps to Kotlin and how to integrate with legacy code and 3rd party libraries. " user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Testing Kotlin Apps">
                <outline type="note" isComment="true" text="Techniques and best practices for unit testing in Kotlin." user="StokeMasterJack" _user_id="116153"/>
            </outline>
            <outline text="Advanced Language Features">
                <outline type="note" isComment="true" text="Advanced topics like reflection, creating DSLs, infix notation, inline functions, tail recursion, etc." user="StokeMasterJack" _user_id="116153"/>
            </outline>
        </outline>
    </body>
</opml>
